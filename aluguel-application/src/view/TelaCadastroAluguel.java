/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.bean.Aluguel;
import model.bean.Console;
import model.bean.ItemConsole;
import model.bean.ItemJogo;
import model.bean.Jogo;
import model.dao.AluguelDAO;
import model.dao.ClienteDAO;
import model.dao.ConsoleDAO;
import model.dao.ItemConsoleDAO;
import model.dao.ItemJogoDAO;
import model.dao.JogoDAO;

/**
 *
 * @author Lucas Santos
 */
public class TelaCadastroAluguel extends javax.swing.JFrame {

    /**
     * Creates new form CadastroAluguel
     */
    public TelaCadastroAluguel() {
        setExtendedState(MAXIMIZED_BOTH);
        initComponents();
        readJTable();
        readJComboBoxConsole();
        readJComboBoxJogo();
    }
    
    public void readJComboBoxConsole() {
        ConsoleDAO dao = new ConsoleDAO();
        
        for (Console c: dao.read()) {
            jcbConsole.addItem(c);
        }
    }
    
    public void readJComboBoxJogo() {
        JogoDAO dao = new JogoDAO();
        
        for (Jogo j: dao.read()) {
            jcbJogo.addItem(j);
        }
    }
    
    public void readJTable() {
        DefaultTableModel modelo;
        modelo = (DefaultTableModel) jtbAluguel.getModel();
        modelo.setNumRows(0);
        AluguelDAO dao = new AluguelDAO();
        
        for (Aluguel a: dao.read()) {
            modelo.addRow(new Object[] {
               a,
               a.getDataInicioAsString(),
               a.getDataFinalAsString(),
               a.getValorTotal(),
               a.getNumeroControles(),
               a.getCliente()
            });
        }
    }
    
    public Double calcularValorTotal() {
        double valorTotal = 0;
        
        for(int row = 0; row < jtbItemConsole.getRowCount(); row++) {
            valorTotal += Double.parseDouble(jtbItemConsole.getValueAt(row, 2).toString());
        }
        
        for(int row = 0; row < jtbItemJogo.getRowCount(); row++) {
            double precoAluguel = Double.parseDouble(jtbItemJogo.getValueAt(row, 2).toString());
            int quantidade = Integer.parseInt(jtbItemJogo.getValueAt(row, 3).toString());
            valorTotal += precoAluguel * quantidade;
        }
              
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        java.util.Date dataInicio;
        java.util.Date dataFinal;
        
        try {
            dataInicio = sdf.parse(jftDataInicio.getText());
            dataFinal = sdf.parse(jftDataFinal.getText());
            long difference = (dataInicio.getTime() - dataFinal.getTime()) / 86400000;
            long dias = Math.abs(difference);
            
            valorTotal *= dias;
        } catch (ParseException ex) {
            Logger.getLogger(TelaCadastroAluguel.class.getName()).log(Level.SEVERE, null, ex);
        }

        return valorTotal;
    }
    
    public void resetCampos() {
        jtfCliente.setText("");
        jftDataInicio.setText("");
        jftDataFinal.setText("");
        jcbConsole.setSelectedIndex(0);
        DefaultTableModel modelo;
        modelo = (DefaultTableModel) jtbItemConsole.getModel();
        modelo.setNumRows(0);
        jcbJogo.setSelectedIndex(0);
        jtfQuantidade.setText("1");
        modelo = (DefaultTableModel) jtbItemJogo.getModel();
        modelo.setNumRows(0);
        jtfNumeroControles.setText("0");
        jtfValorTotal.setText("0.00");
        jtfCliente.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Agendar = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jftDataInicio = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jftDataFinal = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtbAluguel = new javax.swing.JTable();
        jtfCliente = new javax.swing.JTextField();
        jbtnPesquisar = new javax.swing.JButton();
        jbCadastrar = new javax.swing.JButton();
        jbAtualizar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jcbConsole = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtbItemConsole = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jbAdConsole = new javax.swing.JButton();
        jbRmConsole = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtbItemJogo = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jcbJogo = new javax.swing.JComboBox<>();
        jbAdJogo = new javax.swing.JButton();
        jbRmJogo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jtfQuantidade = new javax.swing.JTextField();
        jtfValorTotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfNumeroControles = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jbFechar = new javax.swing.JButton();
        jbRenovar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Aluguel");

        jLabel1.setText("Cliente");

        jLabel8.setText("Início");

        jLabel9.setText("Entrega");

        jtbAluguel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Data de Início", "Data de Entrega", "Valor Total", "Controles", "Cliente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbAluguel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbAluguelMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtbAluguel);

        jbtnPesquisar.setText("Pesquisar");

        jbCadastrar.setText("Cadastrar");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });

        jbAtualizar.setText("Atualizar");
        jbAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarActionPerformed(evt);
            }
        });

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jtbItemConsole.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Console", "Preço", "Conta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbItemConsole.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbItemConsoleMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jtbItemConsole);

        jLabel3.setText("Console");

        jbAdConsole.setText("Adicionar");
        jbAdConsole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdConsoleActionPerformed(evt);
            }
        });

        jbRmConsole.setText("Remover");
        jbRmConsole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRmConsoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbConsole, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jbAdConsole)
                        .addGap(18, 18, 18)
                        .addComponent(jbRmConsole)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbConsole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jbRmConsole)
                    .addComponent(jbAdConsole))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consoles", jPanel1);

        jtbItemJogo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Jogo", "Preço", "Quantidade", "Plataforma"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbItemJogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbItemJogoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtbItemJogo);

        jLabel5.setText("Jogo");

        jbAdJogo.setText("Adicionar");
        jbAdJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdJogoActionPerformed(evt);
            }
        });

        jbRmJogo.setText("Remover");
        jbRmJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRmJogoActionPerformed(evt);
            }
        });

        jLabel4.setText("QTD");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbJogo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbAdJogo)
                        .addGap(18, 18, 18)
                        .addComponent(jbRmJogo)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jcbJogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbAdJogo)
                        .addComponent(jbRmJogo)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        jTabbedPane1.addTab("Jogos", jPanel2);

        jtfValorTotal.setEditable(false);

        jLabel2.setText("Valor total");

        jLabel7.setText("Controles");

        jbFechar.setText("Fechar");
        jbFechar.setToolTipText("Define o aluguel como encerrado, liberando os consoles e jogos.");
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        jbRenovar.setText("Renovar");
        jbRenovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRenovarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jScrollPane4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfNumeroControles, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfValorTotal))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jbFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbRenovar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnPesquisar)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jftDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jftDataFinal)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jftDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jftDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnPesquisar))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtfNumeroControles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCadastrar)
                    .addComponent(jbAtualizar)
                    .addComponent(jbExcluir)
                    .addComponent(jbFechar)
                    .addComponent(jbRenovar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        // TODO add your handling code here:
        Aluguel a = new Aluguel();
        AluguelDAO dao = new AluguelDAO();
        ClienteDAO clidao = new ClienteDAO();
        a.setCliente(clidao.search(Integer.parseInt(jtfCliente.getText())));
        a.setDataInicio(jftDataInicio.getText());
        a.setDataFinal(jftDataFinal.getText());
        a.setValorTotal(Double.parseDouble(jtfValorTotal.getText()));
        a.setNumeroControles(Integer.parseInt(jtfNumeroControles.getText()));
        dao.create(a);
        
        ItemConsoleDAO icdao = new ItemConsoleDAO();
        for(int row = 0; row < jtbItemConsole.getRowCount(); row++) {
            ItemConsole ic = new ItemConsole();
            ic.setAluguel(a);
            ic.setConsole((Console)jtbItemConsole.getValueAt(row, 1));
            icdao.create(ic);
        }
        
        ItemJogoDAO ijdao = new ItemJogoDAO();
        for(int row = 0; row < jtbItemJogo.getRowCount(); row++) {
            ItemJogo ij = new ItemJogo();
            ij.setAluguel(a);
            ij.setJogo((Jogo)jtbItemJogo.getValueAt(row, 1));
            ij.setQuantidade(Integer.parseInt(jtbItemJogo.getValueAt(row, 3).toString()));
            ijdao.create(ij);
        }
        
        readJTable();
        resetCampos();
    }//GEN-LAST:event_jbCadastrarActionPerformed

    private void jbAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarActionPerformed
        // TODO add your handling code here:
        if (jtbAluguel.getSelectedRow() != -1) {
            Aluguel a = new Aluguel();
            AluguelDAO dao = new AluguelDAO();
            ClienteDAO clidao = new ClienteDAO();
            a.setId(Integer.parseInt(jtbAluguel.getValueAt(jtbAluguel.getSelectedRow(), 0).toString()));
            a.setCliente(clidao.search(Integer.parseInt(jtfCliente.getText())));
            a.setDataInicio(jftDataInicio.getText());
            a.setDataFinal(jftDataFinal.getText());
            a.setValorTotal(Double.parseDouble(jtfValorTotal.getText()));
            a.setNumeroControles(Integer.parseInt(jtfNumeroControles.getText()));
            dao.update(a);
            
            ItemConsoleDAO icdao = new ItemConsoleDAO();
            for(int row = 0; row < jtbItemConsole.getRowCount(); row++) {
                ItemConsole ic = new ItemConsole();
                ic.setId(Integer.parseInt(jtbItemConsole.getValueAt(row, 0).toString()));
                ic.setAluguel(a);
                ic.setConsole((Console)jtbItemConsole.getValueAt(row, 1));
                if (icdao.exists(ic)) {
                    icdao.update(ic);
                } else {
                    icdao.create(ic);
                }
            }

            ItemJogoDAO ijdao = new ItemJogoDAO();
            for(int row = 0; row < jtbItemJogo.getRowCount(); row++) {
                ItemJogo ij = new ItemJogo();
                ij.setId(Integer.parseInt(jtbItemJogo.getValueAt(row, 0).toString()));
                ij.setAluguel(a);
                ij.setJogo((Jogo)jtbItemJogo.getValueAt(row, 1));
                ij.setQuantidade(Integer.parseInt(jtbItemJogo.getValueAt(row, 3).toString()));
                if (ijdao.exists(ij)) {
                    ijdao.update(ij);
                } else {
                    ijdao.create(ij);
                }
            }
            readJTable();

            resetCampos();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um registro para atualizar!");
        }
    }//GEN-LAST:event_jbAtualizarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        // TODO add your handling code here:
        if (jtbAluguel.getSelectedRow() != -1) {
            if (jtbItemConsole.getRowCount() + jtbItemJogo.getRowCount() > 0) {
                JOptionPane.showMessageDialog(this, "Impossível excluir: aluguel contém consoles ou jogos!");
            } else {
                Aluguel a = new Aluguel();
                AluguelDAO dao = new AluguelDAO();
                a.setId(Integer.parseInt(jtbAluguel.getValueAt(jtbAluguel.getSelectedRow(), 0).toString()));
                dao.delete(a);
                readJTable();

                resetCampos();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um registro para excluir!");
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jtbAluguelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbAluguelMouseClicked
        // TODO add your handling code here:
        if (jtbAluguel.getSelectedRow() != -1) {
            DefaultTableModel itemconsole;
            itemconsole = (DefaultTableModel) jtbItemConsole.getModel();
            itemconsole.setNumRows(0);
            DefaultTableModel itemjogo;
            itemjogo = (DefaultTableModel) jtbItemJogo.getModel();
            itemjogo.setNumRows(0);
            jftDataInicio.setText(jtbAluguel.getValueAt(jtbAluguel.getSelectedRow(), 1).toString());
            jftDataFinal.setText(jtbAluguel.getValueAt(jtbAluguel.getSelectedRow(), 2).toString());
            jtfValorTotal.setText(jtbAluguel.getValueAt(jtbAluguel.getSelectedRow(), 3).toString());
            jtfNumeroControles.setText(jtbAluguel.getValueAt(jtbAluguel.getSelectedRow(), 4).toString());
            jtfCliente.setText(jtbAluguel.getValueAt(jtbAluguel.getSelectedRow(), 5).toString());
            
            int aluguel = Integer.parseInt(jtbAluguel.getValueAt(jtbAluguel.getSelectedRow(), 0).toString());
            
            ItemConsoleDAO icdao = new ItemConsoleDAO();
            for (ItemConsole ic: icdao.read(aluguel)) {
                itemconsole.addRow(new Object[] {
                    ic,
                    ic.getConsole(),
                    ic.getConsole().getPrecoAluguel(),
                    ic.getConsole().getConta().getTipoConta()
                });
            }
            
            ItemJogoDAO ijdao = new ItemJogoDAO();
            for (ItemJogo ij: ijdao.read(aluguel)) {
                itemjogo.addRow(new Object[] {
                    ij,
                    ij.getJogo(),
                    ij.getJogo().getPrecoAluguel(),
                    ij.getQuantidade(),
                    ij.getJogo().getPlataforma()
                });
            }
            
        }
    }//GEN-LAST:event_jtbAluguelMouseClicked

    private void jbAdConsoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdConsoleActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo;
        modelo = (DefaultTableModel) jtbItemConsole.getModel();
        Console c = (Console)jcbConsole.getSelectedItem();
        int itemconsoleRow = jtbItemConsole.getSelectedRow();
        if (itemconsoleRow != -1) {
            modelo.setValueAt(c, itemconsoleRow, 1);
            modelo.setValueAt(c.getPrecoAluguel(), itemconsoleRow, 2);
            modelo.setValueAt(c.getConta().getTipoConta(), itemconsoleRow, 3);
        } else {
            int maxRow = modelo.getRowCount() - 1;
            int id = maxRow > -1 ? Integer.parseInt(modelo.getValueAt(maxRow, 0).toString()) : 0;
            modelo.addRow(new Object[] {
                id + 1,
                c,
                c.getPrecoAluguel(),
                c.getConta().getTipoConta()
            });
        }
        DecimalFormat df = (DecimalFormat)DecimalFormat.getNumberInstance(Locale.ENGLISH);
        jtfValorTotal.setText(df.format(calcularValorTotal()));
    }//GEN-LAST:event_jbAdConsoleActionPerformed

    private void jbAdJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdJogoActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo;
        modelo = (DefaultTableModel) jtbItemJogo.getModel();
        Jogo j = (Jogo)jcbJogo.getSelectedItem();
        int itemjogoRow = jtbItemJogo.getSelectedRow();
        if (Integer.parseInt(jtfQuantidade.getText()) <= j.getQuantidade()) {
            if (itemjogoRow != -1) {
                modelo.setValueAt(j, itemjogoRow, 1);
                modelo.setValueAt(j.getPrecoAluguel(), itemjogoRow, 2);
                modelo.setValueAt(jtfQuantidade.getText(), itemjogoRow, 3);
                modelo.setValueAt(j.getPlataforma(), itemjogoRow, 4);
            } else {
                int maxRow = modelo.getRowCount() - 1;
                int id = maxRow > -1 ? Integer.parseInt(modelo.getValueAt(maxRow, 0).toString()) + 1: 1;
                modelo.addRow(new Object[] {
                    id,
                    j,
                    j.getPrecoAluguel(),
                    jtfQuantidade.getText(),
                    j.getPlataforma()
                });
            }
        } else {
            JOptionPane.showMessageDialog(this, "Não há consoles o suficiente em estoque!\n"
                    + "Quantidade em estoque: " + j.getQuantidade());
        }
        DecimalFormat df = (DecimalFormat)DecimalFormat.getNumberInstance(Locale.ENGLISH);
        jtfValorTotal.setText(df.format(calcularValorTotal()));
    }//GEN-LAST:event_jbAdJogoActionPerformed

    private void jbRmConsoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRmConsoleActionPerformed
        // TODO add your handling code here:
        int row = jtbItemConsole.getSelectedRow();
        if (row != -1) {
            DefaultTableModel modelo;
            modelo = (DefaultTableModel) jtbItemConsole.getModel();
            if (row != -1) {
                ItemConsole ic = new ItemConsole();
                ItemConsoleDAO dao = new ItemConsoleDAO();
                ic.setId(Integer.parseInt(jtbItemConsole.getValueAt(row, 0).toString()));
                dao.delete(ic);
            }
            modelo.removeRow(row);
            DecimalFormat df = (DecimalFormat)DecimalFormat.getNumberInstance(Locale.ENGLISH);
            jtfValorTotal.setText(df.format(calcularValorTotal()));
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um item para remover!");
        }
    }//GEN-LAST:event_jbRmConsoleActionPerformed

    private void jbRmJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRmJogoActionPerformed
        // TODO add your handling code here:
        int row = jtbItemJogo.getSelectedRow();
        if (row != -1) {
            DefaultTableModel modelo;
            modelo = (DefaultTableModel) jtbItemJogo.getModel();
            if (row != -1) {
                ItemJogo ij = new ItemJogo();
                ItemJogoDAO dao = new ItemJogoDAO();
                ij.setId(Integer.parseInt(jtbItemJogo.getValueAt(row, 0).toString()));
                dao.delete(ij);
            }
            modelo.removeRow(row);
            DecimalFormat df = (DecimalFormat)DecimalFormat.getNumberInstance(Locale.ENGLISH);
            jtfValorTotal.setText(df.format(calcularValorTotal()));
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um item para remover!");
        }
    }//GEN-LAST:event_jbRmJogoActionPerformed

    private void jtbItemConsoleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbItemConsoleMouseClicked
        // TODO add your handling code here:
        if (jtbItemConsole.getSelectedRow() != -1) {
            jcbConsole.setSelectedItem(jtbItemConsole.getValueAt(jtbItemConsole.getSelectedRow(), 0));
        }
    }//GEN-LAST:event_jtbItemConsoleMouseClicked

    private void jtbItemJogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbItemJogoMouseClicked
        // TODO add your handling code here:
         if (jtbItemJogo.getSelectedRow() != -1) {
            jcbJogo.setSelectedItem(jtbItemJogo.getValueAt(jtbItemJogo.getSelectedRow(), 0));
            jtfQuantidade.setText(jtbItemJogo.getValueAt(jtbItemJogo.getSelectedRow(), 3).toString());
        }
    }//GEN-LAST:event_jtbItemJogoMouseClicked

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        // TODO add your handling code here:
        if (jtbAluguel.getSelectedRow() != -1) {
            Aluguel a = (Aluguel)jtbAluguel.getValueAt(jtbAluguel.getSelectedRow(), 0);
            AluguelDAO dao = new AluguelDAO();
            dao.disable(a);
            readJTable();
        }
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jbRenovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRenovarActionPerformed
        // TODO add your handling code here:
        if (jtbAluguel.getSelectedRow() != -1) {
            boolean renovavel = true;
            Aluguel a = (Aluguel)jtbAluguel.getValueAt(jtbAluguel.getSelectedRow(), 0);
            a.setDataFinal(jftDataFinal.getText());
            AluguelDAO dao = new AluguelDAO();
            ConsoleDAO cdao = new ConsoleDAO();
            for(int row = 0; row < jtbItemConsole.getRowCount(); row++) {
                ItemConsole ic = new ItemConsole();
                ic.setId(Integer.parseInt(jtbItemConsole.getValueAt(row, 0).toString()));
                ic.setAluguel(a);
                ic.setConsole((Console)jtbItemConsole.getValueAt(row, 1));
                if (cdao.scheduled(ic)) {
                    System.out.println("Renovavel sera falseado");
                    renovavel = false;
                    System.out.println("Renovavel foi falseado, pois renovavel = " + renovavel);
                    break;
                }
            }
            if (renovavel) {
                System.out.println("Pode renovar porque renovavel = " + renovavel);
                dao.renew(a);
            }
            readJTable();
        }
    }//GEN-LAST:event_jbRenovarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroAluguel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Agendar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jbAdConsole;
    private javax.swing.JButton jbAdJogo;
    private javax.swing.JButton jbAtualizar;
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbRenovar;
    private javax.swing.JButton jbRmConsole;
    private javax.swing.JButton jbRmJogo;
    private javax.swing.JButton jbtnPesquisar;
    private javax.swing.JComboBox<Object> jcbConsole;
    private javax.swing.JComboBox<Object> jcbJogo;
    private javax.swing.JFormattedTextField jftDataFinal;
    private javax.swing.JFormattedTextField jftDataInicio;
    private javax.swing.JTable jtbAluguel;
    private javax.swing.JTable jtbItemConsole;
    private javax.swing.JTable jtbItemJogo;
    private javax.swing.JTextField jtfCliente;
    private javax.swing.JTextField jtfNumeroControles;
    private javax.swing.JTextField jtfQuantidade;
    private javax.swing.JTextField jtfValorTotal;
    // End of variables declaration//GEN-END:variables
}
